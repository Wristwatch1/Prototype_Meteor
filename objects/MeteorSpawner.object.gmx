<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>meteortimer_playertarget = 3000000
meteortimer_leveltarget =  2500000
meteortimer_screentarget = 1200000

meteortimer_player2target = 8000000
meteortimer_level2target =  2400000
meteortimer_screen2target = 1600000

player_counter = meteortimer_playertarget
level_counter = meteortimer_leveltarget
screen_counter = meteortimer_screentarget

player2_counter = meteortimer_player2target
level2_counter = meteortimer_level2target
screen2_counter = meteortimer_screen2target
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_counter -= delta_time
if(player_counter &lt; 0)
{
    player_counter += (meteortimer_playertarget)
    spawn_meteor_playertarget(3, meteorite)
}

level_counter -= delta_time
if(level_counter &lt; 0)
{
    level_counter += meteortimer_leveltarget
    spawn_meteor_leveltarget(3, meteorite)
}

screen_counter -= delta_time
if(screen_counter &lt; 0)
{
    screen_counter += meteortimer_screentarget 
    spawn_meteor_screentarget(3, meteorite)
}

///////////////////////////////////

player2_counter -= delta_time
if(player2_counter &lt; 0)
{
    player2_counter += meteortimer_player2target - ( (meteortimer_player2target * ((objPlayer.x / 9800))) / 1.4)
    spawn_meteor_playertarget(3, meteorite2)
}

level2_counter -= delta_time
if(level2_counter &lt; 0)
{
    level2_counter += meteortimer_level2target - ( (meteortimer_level2target * ((objPlayer.x / 9800))) / 1.4)
    spawn_meteor_leveltarget(3, meteorite2)
}

screen2_counter -= delta_time
if(screen2_counter &lt; 0)
{
    screen2_counter += meteortimer_screen2target - ( (meteortimer_screen2target * ((objPlayer.x / 9800))) / 1.4)
    spawn_meteor_screentarget(3, meteorite2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
